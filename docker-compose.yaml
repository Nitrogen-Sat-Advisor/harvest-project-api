version: "3.5"

services:
  keycloak:
    image: jboss/keycloak
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - KEYCLOAK_USER=${KEYCLOAK_USER}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
      - KEYCLOAK_FRONTEND_URL=${KEYCLOAK_FRONTEND_URL}
    networks:
      - harvest
    ports:
      - 8000:8080
      - 8443:8443
    restart: unless-stopped

  geoserver:
    image: oscarfonts/geoserver:latest
    environment:
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - GEOSERVER_CSRF_WHITELIST=${GEOSERVER_CSRF_WHITELIST:-"*"}
    networks:
      - harvest
    ports:
      - 8080:8080
    volumes:
      - ./geoserver/data:/var/local/geoserver
      - ./geoserver/exts:/var/local/geoserver-exts
    restart: unless-stopped

  datawolf:
    build:
      context: .
      dockerfile: datawolf/Dockerfile
    volumes:
      - datawolf:/home/datawolf/data
    depends_on:
      - postgres
    restart: unless-stopped
    environment:
      - DATAWOLF_ADMINS=${DATAWOLF_ADMINS:-admin@example.com}
      - DATAWOLF_USE_AUTH=${DATAWOLF_USE_AUTH:-false}
      - DB_CLASS_NAME=${DB_CLASS_NAME:-org.postgresql.ds.PGSimpleDataSource}
      - DB_DIALECT=${DB_DIALECT:-org.hibernate.dialect.PostgreSQL9Dialect}
      - DB_SOURCE_URL=${DB_SOURCE_URL:-jdbc:postgresql://postgres/datawolf}
      - DB_MAX_POOLSIZE=${DB_MAX_POOLSIZE:-10}
      - DB_IDLE_TIMEOUT=${DB_IDLE_TIMEOUT:-30000}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - ENGINE_STORELOGS=${ENGINE_STORELOGS:-false}
      - ENGINE_TIMEOUT=${ENGINE_TIMEOUT:-3600}
      - ENGINE_EXTRALOCALEXECUTOR=${ENGINE_EXTRALOCALEXECUTOR:-1}
      - ENGINE_LOCALEXECUTORTHREADS=${ENGINE_LOCALEXECUTORTHREADS:-8}
      - ENGINE_PAGESIZE=${ENGINE_PAGESIZE:-250}
      - LOG=${DATAWOLF_LOG:---out}
    ports:
      - 8888:8888
    networks:
      - harvest

  flask:
    build:
      context: ./service
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
    networks:
      - harvest
    ports:
      - 3000:3000
    volumes:
      - ./service:/root/service

  postgres:
    image: postgis/postgis
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - harvest
    ports:
      - "${POSTGRESQL_PORT:-15432}:5432"
    volumes:
      - ./postgres/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - postgres:/var/lib/postgresql/data

volumes:
  postgres:
  datawolf:

networks:
  harvest:
